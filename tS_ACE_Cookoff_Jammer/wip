
//	[mtr1,"mortar_82mm","mortar_82mm","Single1","Sh_82mm_AMOS","8Rnd_82mm_Mo_shells",600982: shell.p3d,B Alpha 1-1:1 (10Dozen)]
//		"Sh_82mm_AMOS"
//		8Rnd_82mm_Mo_shells
//  Sh_120mm_HE
am1 = [];
mtr1 addEventHandler ["fired", { am1 = _this; }];
/*
[7476.67,8710.32,0.00143862]
[8244.77,9002.45,0.00146866]
[8239.48,9619.66,0.00143862]
*/

shellTypes = [
	"Sh_82mm_AMOS"
	,"Smoke_82mm_AMOS_White"
	,"Flare_82mm_AMOS_White"
];

fnc_spawnShell = {
	params ["_pos", ["_type", "Sh_82mm_AMOS"], ["_h", 500], ["_v", -100]];
	
	_pos set [2, _h];
	
	private _shell = _type createVehicle _pos;
	_shell setVectorDirandUp [[0,0,-1],[0.1,0.1,1]]; 
	
	if (_type isKindOf "FlareCore") then {
		if (isNil "dzn_fnc_flares_setFlareEffectGlobal") exitWith { deleteVehicle _shell; objNull };
		
		_shell setPosATL [
			_pos select 0
			, _pos select 1
			, 300
		];
		
		[[0,0,0,0,0,_shell], "mortar"] call dzn_fnc_flares_setFlareEffectGlobal;
		
		_shell setVelocity [0,0,1];
		_shell spawn {			
			while { (getPosATL _this select 2) > 1 } do {
				_this setVelocity [0,0,-4];	
			};		
		};
	} else {	
		_shell setVelocity [0,0,_v];
	};
	
	_shell
};







if (true) exitWith {


// Variables
tS_ACE_Cookoff_Jammer_timeoutRange = [45, 60, 75];
tS_ACE_Cookoff_Jammer_nonCookingVehicles = [
	"CUP_BMP2_HQ_Base"
	,"CUP_BMP2_Ambul_Base"
	,"CUP_BRDM2_Base"		
	,"CUP_BTR40_MG_Base"
	,"CUP_BTR60_Base"
	,"CUP_GAZ_Vodnik_Base"		
	,"CUP_M113_Base"
	,"CUP_AAV_Base"		
	,"CUP_BAF_Jackal2_BASE_D"
	,"CUP_Mastiff_Base"
	,"CUP_RG31_BASE"
	,"CUP_Ridgback_Base"
	,"CUP_B_LAV25M240_USMC"
	,"CUP_B_LAV25_HQ_USMC"
	,"CUP_StrykerBase"
	,"CUP_FV432_Bulldog_Base"		
	,"rhs_btr_base"
	,"rhsusf_m113tank_base"
	,"rhsusf_rg33_base"		
];
tS_ACE_Cookoff_Jammer_cookingVehicles = [
	"CUP_BRDM2_ATGM_Base"
	,"CUP_M163_Base"
	,"CUP_B_M1135_ATGMV_Desert"
	,"CUP_B_M1128_MGS_Desert"		
	,"CUP_GAZ_Vodnik_BPPU_Base"		
	,"rhs_btr80a_msv"
	,"rhs_btr80a_vdv"
	,"rhs_btr80a_vv"
	,"rhs_btr80a_vmf"		
];

// CBA Settings
#include "Settings.sqf"

if (!tS_ACE_Cookoff_Jammer_Enabled) exitWith {};
tS_ACE_Cookoff_Jammer_structuralDamageMax = 20;
// Functions
tS_ACE_Cookoff_Jammer_fnc_setOnFire = {
	private _vehicle = _this;
	
	if (
		_damage > 0.9 
		&& !(_vehicle getVariable ["ace_cookoff_infire",false])
	) then {		
		_vehicle setVariable ["ace_cookoff_infire", true, true];
		_vehicle setVariable ["ace_cookoff_fireStarted", time, true];
		private _timeout = floor random tS_ACE_Cookoff_Jammer_timeoutRange;
		
		[_vehicle, _timeout] spawn {
			params["_v","_t"];
			
			//_v call ace_cookoff_fnc_engineFire;
			
			sleep (_t/3);
			[_v, [1,-2,-1], _t] call tS_ACE_Cookoff_Jammer_fnc_setEffectFire;
			
			sleep (_t/3 + random (2));
			[_v, [0,-0.75,-1], _t] call tS_ACE_Cookoff_Jammer_fnc_setEffectFire;
			
			sleep (_t/5 + random (2));
			[_v, [1,0.25,-1], _t] call tS_ACE_Cookoff_Jammer_fnc_setEffectFire;		
		};
		
		[_vehicle, _timeout] spawn {
			params["_v","_t"];
			
			[_v, 75] call tS_ACE_Cookoff_Jammer_fnc_leaveVehicle;
			
			sleep _t;
			
			_v setDamage 1;				
		};
	};
};

tS_ACE_Cookoff_Jammer_fnc_setDisabled = {
	private _vehicle = _this;
	_vehicle setFuel 0.00001;
	
	[_vehicle, 50] call tS_ACE_Cookoff_Jammer_fnc_leaveVehicle;
};

tS_ACE_Cookoff_Jammer_fnc_leaveVehicle = {
	params["_v", ["_d", 75]];
	
	private _crew = crew _v;
	{
		if !(isPlayer _x) then {
			(group _x) leaveVehicle _v;
			moveOut _x;
		};
		
		_x doMove (_v getPos [random (360), _d]);								
	} forEach _crew;
};


tS_ACE_Cookoff_Jammer_fnc_addDamageHandler = {
	_this addEventHandler [
		"HandleDamage"
		, { 
			params ["_vehicle", "", "_damage", "_source", "_ammo", "_hitIndex", "_shooter", "_hitpoint"];
			if (damage _vehicle >= 1) exitWith {};
			
			if (_hitIndex == -1) then { _hitpoint = "#structural"; };
			
			switch toLower(_hitpoint) do {
				case "hitengine";
				case "hitfuel": {
					_vehicle call tS_ACE_Cookoff_Jammer_fnc_setOnFire;					
					_damage
				};
				
				case "hithull";
				case "#structural": {
					private _structuralDamage = _damage + (_vehicle getVariable "ace_cookoff_overallStructuralDamage");
					
					_vehicle setVariable [
						"ace_cookoff_overallStructuralDamage"
						, _structuralDamage
						, true
					];
					
					if (_structuralDamage > tS_ACE_Cookoff_Jammer_structuralDamageMax) then {
						// _vehicle setDamage 1;
						_vehicle call tS_ACE_Cookoff_Jammer_fnc_setDisabled;
					};
					
					_damage min 0.89
				};

				default {
					// _vehicle setHitPointDamage [_hitpoint, _damage];
					_damage
				};
			}
		}
	];
};


tS_ACE_Cookoff_Jammer_fnc_setEffectFire = {
	params[
		"_obj"
		, ["_attachPoint", [0,0,-1]]
		, ["_timeout", 30]
		, ["_color", [0.5,0.5,0.5]]
		, ["_particleSettings", [2, 20, 1, 1, 1, 5.4]]
		, ["_allowDamage", true]
	];
	
	// Variables
	private _colorRed = _color select 0;
	private _colorGreen = _color select 1;
	private _colorBlue = _color select 2;
	
	private _particleLifeTime = _particleSettings select 0;
	private _particleDensity = _particleSettings select 1;
	private _particleSize = _particleSettings select 2;
	private _particleSpeed = _particleSettings select 3;
	private _effectSize = _particleSettings select 4;
	private _orientation = _particleSettings select 5;

	private _damage = if (_allowDamage) then { 1 } else { 0 };
	
	private _emitter = "#particlesource" createVehicle [10,10,10];
	_emitter attachTo [_obj, _attachPoint];
	
	_emitter setParticleParams [
		["\A3\data_f\ParticleEffects\Universal\Universal",16,10,32]
		,"","billboard",1,_particleLifeTime
		,[0,0,0],[0,0,0.4*_particleSpeed]
		,0,0.0565,0.05,0.03,[0.9*_particleSize,0],
		[	
			[1*_colorRed,1*_colorGreen,1*_colorBlue,-0]
			,[1*_colorRed,1*_colorGreen,1*_colorBlue,-1]
			,[1*_colorRed,1*_colorGreen,1*_colorBlue,-1]
			,[1*_colorRed,1*_colorGreen,1*_colorBlue,-1]
			,[1*_colorRed,1*_colorGreen,1*_colorBlue,-1]
			,[1*_colorRed,1*_colorGreen,1*_colorBlue,0]
		],
		[1], 0.01, 0.02, "", "", "",_orientation,false,-1,[[3,3,3,0]]
	];	
	_emitter setParticleRandom [_particleLifeTime/4, [0.15*_effectSize,0.15*_effectSize,0], [0.2,0.2,0], 0.4, 0, [0,0,0,0], 0, 0, 0.2];
	
	if (_damage > 0) then {_emitter setParticleFire [0.6*_damage, 0.25*_damage, 0.1];};
	_emitter setDropInterval (1/_particleDensity);
	
	_smokeEmitter = "#particlesource" createVehicleLocal [0,0,0];
	_smokeEmitter setParticleClass "ObjectDestructionSmoke1_2Smallx";
	_smokeEmitter attachTo [_obj, _attachPoint];
	
	//--- light
	private _lightSize = (_particleSize + _effectSize)/2;

	private _light = createVehicle ["#lightpoint", (getPos _emitter), [], 0, "CAN_COLLIDE"];
	_light attachTo [_obj, _attachPoint];
	// _light setPos [(getPos _emitter) select 0, (getPos _emitter) select 1,((getPos _emitter) select 2) + 0.5];
	_light setLightBrightness 1.0;
	_light setLightColor [1,0.65,0.4];
	_light setLightAmbient [0.15,0.05,0];
	_light setLightIntensity (50 + 400*_lightSize);
	_light setLightAttenuation [0,0,0,1];
	_light setLightDayLight false;	

	[_emitter, _light, _smokeEmitter, _timeout] spawn {
		params["_emitter","_light","_smokeEmitter","_timeout"];
		
		sleep _timeout;
		deleteVehicle _emitter;
		deleteVehicle _smokeEmitter;
		deleteVehicle _light;
	};
};



// Loop throu all vehicles and set cookoff variable to false
[] spawn {
	while { true } do {		
		{
			private _v = _x;
			private _isCooking = ({ _v isKindOf _x } count tS_ACE_Cookoff_Jammer_cookingVehicles) > 0;
			private _isNotCoocking = ({ _v isKindOf _x } count tS_ACE_Cookoff_Jammer_nonCookingVehicles) > 0;
			if (
				!_isCooking 
				&& _isNotCoocking
				&& isNil {_v getVariable "ace_cookoff_enable"}
			) then {
				_v setVariable ["ace_cookoff_enable", false, true];
				_v setVariable ["ace_cookoff_overallStructuralDamage", damage _v, true];
				_v remoteExec ["tS_ACE_Cookoff_Jammer_fnc_addDamageHandler", 0];
				
				sleep .01;
			};
		} forEach vehicles;

		sleep 10;
	};
};

};
